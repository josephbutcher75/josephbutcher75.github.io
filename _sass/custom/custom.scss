// custom SCSS (or CSS) goes here

// Import theme switcher for light/dark mode functionality
@import "theme-switcher";

.highlight ::selection
{
  background-color: #000;
}

// Responsive improvements

// Make main content area more flexible
.main {
  @include mq(md) {
    max-width: none; // Remove fixed max-width
    width: calc(100% - #{$nav-width-md}); // Use full available width minus sidebar
  }

  @include mq(lg) {
    // Allow content to expand beyond the fixed $content-width
    max-width: none;
    width: calc(100% - #{$nav-width}); // Use full available width minus sidebar
    margin-left: $nav-width;
  }
}

// Make main content wrapper more flexible
.main-content-wrap {
  max-width: none; // Remove any max-width restrictions
  width: 100%;
}

// Force table to size to content and center it
.main-content .table-wrapper {
  // Override the original styles completely
  display: block !important;
  width: auto !important;
  max-width: none !important;
  margin: $sp-5 auto; // Center the table wrapper
  
  // Container for centering
  text-align: left;
  
  // Inner wrapper to control table size
  > * {
    display: inline-block;
    text-align: left;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.12), 0 3px 10px rgba(0, 0, 0, 0.08);
    border-radius: $border-radius;
  }
}

// Default table wrapper styling
.table-wrapper {
  display: flex !important;
  justify-content: center; // Default center alignment
  width: 100% !important;
  margin-bottom: $sp-5;
  
  // Remove original styling that forces full width
  box-shadow: none !important;
  border-radius: 0 !important;
  overflow-x: visible !important;
  
  table {
    width: auto !important; // Force auto width
    min-width: auto !important;
    display: table;
    border-collapse: separate;
    
    // Apply shadow and styling to the table itself
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.12), 0 3px 10px rgba(0, 0, 0, 0.08);
    border-radius: $border-radius;
    overflow: hidden; // Ensure border-radius works with table
  }
  
  th, td {
    min-width: auto;
    padding: $sp-2 $sp-3;
    word-wrap: break-word;
    overflow-wrap: break-word;
    white-space: nowrap;
    
    @include mq(xs) {
      padding: $sp-1 $sp-2;
      white-space: normal;
      min-width: 80px;
    }
  }
}

// Enhanced table styling for all pages except Statistics
// Use :not() selector to exclude the statistics page
.main-content:not([data-page="Statistics"]) .table-wrapper,
body:not(.page-statistics) .table-wrapper {
  
  // Indent tables instead of centering them
  justify-content: flex-start !important; // Left align
  padding-left: $sp-6; // Add indentation (32px)
  
  @include mq(md) {
    padding-left: $sp-8; // More indentation on larger screens (48px)
  }
  
  // Specific styling for percentage columns in tables (2nd column and beyond)
  td:nth-child(2), th:nth-child(2),
  td:nth-child(n+2), th:nth-child(n+2) {
    padding-left: $sp-4; // Extra padding on the left side
    padding-right: $sp-4; // Extra padding on the right side
    text-align: center; // Center the values for better readability
  }
  
  // Additional spacing for first column (labels/categories)
  tbody tr td:first-child, thead tr th:first-child {
    text-align: center; // Center the first column values
    font-weight: 500; // Make first column slightly bolder
    padding-left: $sp-4; // Extra padding for first column too
    padding-right: $sp-4;
  }
}

// Specific override for Statistics page to use compact styling and center alignment
body.page-statistics .table-wrapper,
.main-content[data-page="Statistics"] .table-wrapper {
  
  justify-content: center !important; // Keep statistics tables centered
  padding-left: 0 !important; // No indentation for statistics
  
  th, td {
    padding: $sp-1 $sp-2; // Compact padding for statistics tables
    text-align: center; // Center align for statistics
    font-size: $font-size-3; // Slightly smaller font for data tables
  }
  
  // Keep first column labels left-aligned in statistics
  tbody tr td:first-child, thead tr th:first-child {
    text-align: left;
    font-weight: 500;
    padding-left: $sp-3;
  }
}

// Fallback: Target statistics page by URL or title content
[href*="Statistics"] ~ .main .table-wrapper,
.main-content:has(h1:contains("Statistics")) .table-wrapper {
  justify-content: center !important;
  padding-left: 0 !important;
  
  th, td {
    padding: $sp-1 $sp-2 !important;
    text-align: center !important;
  }
  
  tbody tr td:first-child, thead tr th:first-child {
    text-align: left !important;
    padding-left: $sp-3 !important;
  }
}

// Make images responsive
img {
  max-width: 100%;
  height: auto;
}

// Improve content area flexibility
.main-content {
  width: 100%;
  max-width: none;
  
  // Better handling of wide content
  overflow-x: auto;
  
  // Improve pre/code block responsiveness
  pre, code {
    overflow-x: auto;
    word-wrap: break-word;
    white-space: pre-wrap;
  }
  
  // Make sure lists are properly contained
  ul, ol {
    width: 100%;
    box-sizing: border-box;
  }
}

// Adjust sidebar for better responsive behavior
.side-bar {
  @include mq(lg) {
    // Use a more flexible width calculation
    width: $nav-width;
    min-width: $nav-width;
    max-width: $nav-width;
  }
}

// Media query for very wide screens - allow content to expand
@media (min-width: 1600px) {
  .main {
    width: calc(100% - #{$nav-width});
    max-width: none;
  }
  
  .main-content-wrap {
    max-width: none;
    padding-left: $gutter-spacing;
    padding-right: $gutter-spacing;
  }
}

// Media query for mobile devices - ensure proper table handling
@media (max-width: 768px) {
  .main-content-wrap {
    padding-left: $gutter-spacing-sm;
    padding-right: $gutter-spacing-sm;
    width: 100%;
  }
  
  .table-wrapper {
    justify-content: flex-start !important; // Left align on mobile
    
    table {
      width: 100% !important; // Full width on mobile
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.12), 0 3px 10px rgba(0, 0, 0, 0.08);
    }
  }
  
  // Reduce indentation on mobile for non-statistics pages
  .main-content:not([data-page="Statistics"]) .table-wrapper,
  body:not(.page-statistics) .table-wrapper {
    padding-left: $sp-3 !important; // Smaller indentation on mobile (12px)
    
    td:nth-child(2), th:nth-child(2),
    td:nth-child(n+2), th:nth-child(n+2) {
      padding-left: $sp-3;
      padding-right: $sp-3;
    }
  }
  
  // Keep statistics tables compact and centered on mobile
  body.page-statistics .table-wrapper {
    padding-left: 0 !important; // No indentation for statistics on mobile
    justify-content: center !important; // Keep centered
    
    th, td {
      padding: $sp-1 $sp-1;
    }
  }
}

// Dark Mode Toggle Styles
// ================================================

.theme-toggle-container {
  display: flex;
  align-items: center;
  margin-left: auto; // Push to the right
}

// Make sure the header displays as flex
.main-header {
  display: flex !important;
  align-items: center !important;
  justify-content: space-between !important;
  padding: $sp-3 $sp-4;
  min-height: 60px; // Ensure minimum height
}

.theme-toggle {
  background: var(--btn-primary-color, #5c7cfa);
  border: 1px solid var(--border-color, rgba(0, 0, 0, 0.1));
  border-radius: $border-radius;
  padding: $sp-2;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 40px;
  height: 40px;
  transition: all 0.2s ease-in-out;
  color: white;
  
  &:hover {
    background: var(--btn-primary-color, #5c7cfa);
    opacity: 0.8;
    transform: scale(1.05);
  }
  
  &:focus {
    outline: 2px solid var(--link-color, #5c7cfa);
    outline-offset: 2px;
  }
  
  &:active {
    transform: scale(0.95);
  }
}

.theme-icon {
  width: 18px;
  height: 18px;
  transition: transform 0.2s ease-in-out;
}

// Default state: show sun (light mode)
.theme-toggle .sun-icon {
  display: block;
}

.theme-toggle .moon-icon {
  display: none;
}

// Dark mode state: show moon
.theme-toggle.dark-mode .sun-icon {
  display: none;
}

.theme-toggle.dark-mode .moon-icon {
  display: block;
}

// Dark theme styles
[data-theme="dark"] {
  .theme-toggle {
    background: var(--btn-primary-color, #7c3aed);
    border-color: rgba(255, 255, 255, 0.2);
    color: white;
    
    &:hover {
      background: var(--btn-primary-color, #7c3aed);
      opacity: 0.8;
      border-color: rgba(255, 255, 255, 0.3);
    }
    
    &:focus {
      outline-color: var(--link-color, #7c3aed);
    }
  }
}

// Smooth transitions for theme changes
[data-theme="light"],
[data-theme="dark"] {
  * {
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  }
}

// Sticky Header with Search Bar and Theme Toggle
// ================================================

// Make the main header sticky at the top
.main-header {
  position: sticky !important;
  top: 0 !important;
  z-index: 100 !important; // Ensure it stays above other content
  backdrop-filter: blur(8px); // Add subtle blur effect
  -webkit-backdrop-filter: blur(8px); // Safari support
  border-bottom: 1px solid $border-color !important;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important; // Subtle shadow for separation
  
  // Ensure proper background in both themes
  background-color: $body-background-color !important;
  
  @include mq(md) {
    display: flex !important; // Ensure it displays on larger screens
  }
}

// Add padding to main content to prevent it from being hidden behind sticky header
.main-content-wrap {
  // Add top padding to account for sticky header height
  padding-top: calc($header-height + #{$gutter-spacing-sm}) !important;
  
  @include mq(md) {
    padding-top: calc($header-height + #{$gutter-spacing}) !important;
  }
}

// Ensure search functionality works properly with sticky header
.search-active {
  .main-header {
    position: fixed !important; // Use fixed when search is active for full overlay
    width: 100% !important;
    left: 0 !important;
    right: 0 !important;
  }
}

// Ensure the theme toggle remains accessible in sticky header
.theme-toggle-container {
  // Ensure it stays in position within the sticky header
  position: relative;
  z-index: 101; // Higher than header to ensure clickability
}